/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import Elementos.Llanta;
import Elementos.Simulador;
import Elementos.Vehiculo;
import Exceptions.AccidenteException;
import Exceptions.AccionesApagadoException;
import Exceptions.ApagarDeNuevoException;
import Exceptions.EncenderDeNuevoException;
import Exceptions.FrenadoDetenidoException;
import Exceptions.PatinarException;
import java.applet.AudioClip;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS
 */
public class VistaVehiculo extends javax.swing.JFrame {

    /**
     * Saber si se ha sobrepasado el límite de velocidad del vehículo.
     */
    private boolean verificadorVelocidad = false;
    /**
     * Cantidad de milisegundos que se presiona acelerar el vehículo.
     */
    private long milisegs;
    /**
     * Cantidad de milisegundos que se presiona frenar el vehículo.
     */
    private long milisegs2;
    /**
     * Velocidad al comenzar a frenar.
     */
    private float velocidadActual;
    /**
     * Llamar a la clase Simulador para utilizar sus métodos o atributos.
     */
    private Simulador simulador;
    /**
     * Llamar a la clase Vehiculo para utilizar sus métodos o atributos.
     */
    private Vehiculo vehiculo;
    
    public void setSimulador(Simulador simulador) {
        this.simulador = simulador;
    }
    
    
    /**
     * Creates new form VistaVehiculo
     */
    public VistaVehiculo(Simulador simulador) {
        this.simulador = simulador;
        initComponents();
        setLocationRelativeTo(null);
        VistaMenuPrincipal vistaMenuPrincipal = new VistaMenuPrincipal(this, true);
        iniciarVidriosInvisibles();
        decidirBotonesMenu(vistaMenuPrincipal);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAcelerar = new javax.swing.JButton();
        btnFreno = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();
        lblVelocidad = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnEncender = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnReparar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lblVidrio = new javax.swing.JLabel();
        lblVidrioLateral = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAcelerar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/PedalAc.png"))); // NOI18N
        btnAcelerar.setToolTipText("");
        btnAcelerar.setBorderPainted(false);
        btnAcelerar.setContentAreaFilled(false);
        btnAcelerar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAcelerar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAcelerarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnAcelerarMouseReleased(evt);
            }
        });
        btnAcelerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcelerarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAcelerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 520, 90, 140));

        btnFreno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/PedalFr.png"))); // NOI18N
        btnFreno.setBorderPainted(false);
        btnFreno.setContentAreaFilled(false);
        btnFreno.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFreno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFrenoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnFrenoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnFrenoMouseReleased(evt);
            }
        });
        getContentPane().add(btnFreno, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 550, 80, 110));

        btnApagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/On_Off.png"))); // NOI18N
        btnApagar.setBorderPainted(false);
        btnApagar.setContentAreaFilled(false);
        btnApagar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });
        getContentPane().add(btnApagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 620, 60, 50));

        lblVelocidad.setFont(new java.awt.Font("Verdana", 3, 36)); // NOI18N
        lblVelocidad.setForeground(new java.awt.Color(204, 204, 204));
        lblVelocidad.setText("---");
        getContentPane().add(lblVelocidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 280, 140, 50));

        jLabel3.setFont(new java.awt.Font("Verdana", 3, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("km/h");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 280, 120, 50));

        btnEncender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/On_Off.png"))); // NOI18N
        btnEncender.setBorderPainted(false);
        btnEncender.setContentAreaFilled(false);
        btnEncender.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEncender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncenderActionPerformed(evt);
            }
        });
        getContentPane().add(btnEncender, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 510, 60, 50));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Apagar");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1550, 570, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Encender");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 570, -1, -1));

        btnReparar.setBackground(new java.awt.Color(0, 0, 0));
        btnReparar.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        btnReparar.setForeground(new java.awt.Color(255, 0, 51));
        btnReparar.setText("Reparar");
        btnReparar.setToolTipText("");
        btnReparar.setBorderPainted(false);
        btnReparar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReparar.setDefaultCapable(false);
        btnReparar.setFocusPainted(false);
        btnReparar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRepararActionPerformed(evt);
            }
        });
        getContentPane().add(btnReparar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 90, 270, 120));

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setBorderPainted(false);
        jButton2.setEnabled(false);
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 80, 270, 130));

        lblVidrio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/vidrioRoto (1).png"))); // NOI18N
        getContentPane().add(lblVidrio, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 0, -1, 100));

        lblVidrioLateral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/vidrioLateral.png"))); // NOI18N
        getContentPane().add(lblVidrioLateral, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 270, 280));

        btnSalir.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setText("Salir del vehiculo.");
        btnSalir.setBorderPainted(false);
        btnSalir.setContentAreaFilled(false);
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 390, 160, 180));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/VehiculoF.jpg"))); // NOI18N
        fondo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Comenzar la aceleración del vehículo.
     * @param evt 
     */
    private void btnAcelerarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAcelerarMousePressed
        String mensaje = "El vehículo está apagado, debes encenderlo para utilizarlo.";
        String mensajeAccidente = "El vehículo está accidentadom, no puedes utilizarlo hasta que lo repares";
        
        try {
            if(simulador.desactivarFrenarAcelerarApagado()) {
                milisegs = (System.currentTimeMillis())/1000;
                generarSonidoAutoAcelerando();
            } else {
                if(simulador.entregarEstadoAccidente()){
                    throw new AccidenteException(mensajeAccidente);
                }else{
                    throw new AccionesApagadoException(mensaje);
                }
            }
        } catch (AccionesApagadoException e) {
            JOptionPane.showMessageDialog(null, mensaje);
        }catch (AccidenteException ae){
            JOptionPane.showMessageDialog(null, mensajeAccidente);
        }
    }//GEN-LAST:event_btnAcelerarMousePressed

    /**
     * Finalizar la aceleración del vehículo.
     * @param evt 
     */
    private void btnAcelerarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAcelerarMouseReleased
        milisegs2 = (System.currentTimeMillis()/1000) - milisegs;
        simulador.acelerarVehiculo(milisegs2);
        dibujarVelocidad();
        verificarSobrePasarLimiteMotor();
        audioCarroAcelerando.stop();
        System.out.println("Me presionaron : "+milisegs2+" segundos");
    }//GEN-LAST:event_btnAcelerarMouseReleased
    
    /**
     * Verifcar si se ha sobrepasado la velocidad permitida por el motor.
     */
    public void verificarSobrePasarLimiteMotor(){
        String mensaje = "Pasaste el limite de velocidad del motor, te has accidentado.";
        try {
            if(simulador.sobrepasarLimiteMotor()) {
                audioCarroAcelerando.stop();
                iniciarAccidente();
                throw new AccidenteException(mensaje);
            }
        } catch (AccidenteException ae) {
            JOptionPane.showMessageDialog(null, mensaje);
            
        }
    }
    
    /**
     * Comenzar a frenar el vehículo.
     * @param evt 
     */
    private void btnFrenoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFrenoMousePressed
        String mensaje = "El vehículo está apagado, debes encenderlo para utilizarlo.";
        String mensajeAccidente = "El vehículo está accidentado, no puedes utilizarlo hasta que lo repares";
        
        velocidadActual = simulador.extraerVelocidad();
        
        try {
            if(simulador.desactivarFrenarAcelerarApagado()) {
                milisegs = (System.currentTimeMillis())/1000;
                generarSonidoAutoFrenando(); 
                dibujarVelocidad();
            } else {
                if(simulador.entregarEstadoAccidente()){
                    throw new AccidenteException(mensajeAccidente);
                }
                throw new AccionesApagadoException(mensaje);
            }
        } catch (AccionesApagadoException e) {
            JOptionPane.showMessageDialog(null, mensaje);
        }catch (AccidenteException ae){
            JOptionPane.showMessageDialog(null, mensajeAccidente);
        }
    }//GEN-LAST:event_btnFrenoMousePressed

    /**
     * Verificar que el vehículo está detenido (velocidad = 0) y no se puede
     * frenar más.
     */
    public void frenarMinimo() {
        String mensaje = "El vehículo ya está detenido no se puede frenar más.";
        try {
            if(simulador.validarFrenarDetenido()) {
                simulador.detenerVehiculo();
                throw new FrenadoDetenidoException(mensaje);
            }
        } catch (FrenadoDetenidoException e) {
            JOptionPane.showMessageDialog(null, mensaje);
            
        }
    }
    
    /**
     * Terminar de frenar el vehículo.
     * @param evt 
     */
    private void btnFrenoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFrenoMouseReleased
        milisegs2 = (System.currentTimeMillis()/1000) - milisegs;
        frenarMinimo();
        simulador.frenarVehiculo(milisegs2);
        determinarFinalizacionDelPatinado();
        dibujarVelocidad();
        audioCarroFreno.stop();
        System.out.println(-(simulador.extraerVelocidad() - velocidadActual));
        System.out.println("Me presionaron : "+milisegs2+" segundos");
        String mensaje = "El vehículo ha patinado, has frenado bruscamente y tus llantas no soportan tanta tension.";
        
        if(simulador.sobrepasarVelocidadLlantas(velocidadActual))
                verificadorVelocidad = true;
            llamarExcepcionesPatinar(mensaje);
        
    }//GEN-LAST:event_btnFrenoMouseReleased

    /**
     * Se verifica si el vehículo cumple algún requisito para empezar
     * a patinar.
     * @param mensaje 
     */
    public void llamarExcepcionesPatinar(String mensaje) {
        try{
            if(-(simulador.extraerVelocidad() - velocidadActual) > velocidadActual) {
                    simulador.detenerVehiculo();
                    comenzarPatinado(mensaje);
            }
            if(verificadorVelocidad){
                comenzarPatinado(mensaje);
            } 
        }catch (PatinarException pe){
            JOptionPane.showMessageDialog(null, mensaje);
        }
    }
    
    /**
     * Se comienza la acción de patinar el vehículo.
     * @param mensaje 
     */
    public void comenzarPatinado(String mensaje) {
        dibujarVelocidad();
        audioCarroFreno.stop();
        throw new PatinarException(mensaje);
    }
    
    private void btnFrenoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFrenoMouseClicked

    }//GEN-LAST:event_btnFrenoMouseClicked

    /**
     * Se apaga el vehículo, modificándolo a su estado original.
     * @param evt 
     */
    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
        String mensaje = "El carro ya está apagado";
        String mensajeAccidente = "Te haz accidentado!!!! Haz pagado el vehìculo a una velocidad no permitida, se te apagará el vehículo.";
        
        try {
            if(!simulador.desactivarApagarApagado()) {
                throw new ApagarDeNuevoException(mensaje);
            }
            if(!simulador.apagarAltaVelocidad()) {
                apagarVehiculo();
            } else {
                if(simulador.entregarEstadoAccidente()){
                    iniciarAccidente();
                    throw new AccidenteException(mensajeAccidente);
                }
            }
        } catch (ApagarDeNuevoException e) {
            JOptionPane.showMessageDialog(null, mensaje);
        } catch (AccidenteException ex) {
            JOptionPane.showMessageDialog(null, mensajeAccidente);   
        } 
    }//GEN-LAST:event_btnApagarActionPerformed

    /**
     * Se apaga el vehículo, y se resetea.
     */
    public void apagarVehiculo() {
//        audioCarroAndando.stop();
        simulador.apagarVehiculo();
        dibujarVelocidad();
    }
    
    /**
     * Se enciende el vehículo, permitiéndolo realizar sus funciones.
     * @param evt 
     */
    private void btnEncenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncenderActionPerformed
        String mensaje = "El vehículo ya está encendido y listo para funcionar.";
        String mensajeAccidente = "El vehículo está accidentadom, no puedes utilizarlo hasta que lo repares";
        try {
            if(simulador.entregarEstadoAccidente()){
                throw new AccidenteException(mensajeAccidente);
            }else{
                if(!simulador.desactivarEncenderEncendido()) {
                    generarSonidoAutoPrendiendo();
                    generarSonidoAutoMarcha();
                    simulador.prenderVehiculo();
                    dibujarVelocidad();
                } else {
                    throw new EncenderDeNuevoException(mensaje);
                }
            }
        } catch (EncenderDeNuevoException e) {
            JOptionPane.showMessageDialog(null, mensaje);
        } catch (AccidenteException ae){
            JOptionPane.showMessageDialog(null, mensajeAccidente);
        }
    }//GEN-LAST:event_btnEncenderActionPerformed

    private void btnAcelerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcelerarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAcelerarActionPerformed

    /**
     * En el momento que el vehículo esté accidentado, se puede utilizar esta
     * función para poder repararlo y seguir utilizando el vehículo.
     * @param evt 
     */
    private void btnRepararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRepararActionPerformed
        reparar();
    }//GEN-LAST:event_btnRepararActionPerformed

    /**
     * Salir del vehículo y volver a la ventana principal.
     * @param evt 
     */
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        try {
            setVisible(false);
            apagarVehiculo();
            crearDialogoPrincipal();
        } catch (NullPointerException e) {
            setVisible(false);
            crearDialogoPrincipal();
        }
        
    }//GEN-LAST:event_btnSalirActionPerformed
    
    /**
     * Se finaliza la acción de patinar el vehículo.
     */
    public void determinarFinalizacionDelPatinado() {
        if(simulador.detenerPatinado())
            verificadorVelocidad = false;
    }
    
    /**
     * En el momento que se ha accidentado el vehículo, se activa esta 
     * función.
     */
    public void activarReparacion(){
        if(simulador.entregarEstadoAccidente()){
            btnReparar.setVisible(true);
        }
    }
    
    /**
     * Al oprimir el botón de reparar el vehículo, éste volverá a su 
     * estado original.
     */
    public void reparar(){
        desactivarVidrios();
        simulador.cambiarEstadoAccidentado();
    }
    
    /**
     * Se conoce la velocidad actual del vehículo y ésta se dibuja 
     * en el vehículo.
     */
    public void dibujarVelocidad(){
        float velocidad = simulador.extraerVelocidad();
        lblVelocidad.setText(Float.toString(velocidad));
    }
    
    /**
     * Sonido de un vehículo en movimiento.
     */
    private AudioClip audioCarroAndando;
    
    /**
     * Se genera el sonido del auto en su marcha normal.
     */
    public void generarSonidoAutoMarcha() {
        audioCarroAndando = java.applet.Applet.newAudioClip(getClass().getResource("/Audios/autoEnMarcha.wav"));
        audioCarroAndando.loop();
    }
    
    /**
     * Sonido de un vehículo acelerando.
     */
    private AudioClip audioCarroAcelerando;
    
    /**
     * Se genera el sonido del auto acelerando.
     */
    public void generarSonidoAutoAcelerando() {
        audioCarroAcelerando = java.applet.Applet.newAudioClip(getClass().getResource("/Audios/autoAceleracion.wav"));
        audioCarroAcelerando.loop();
    }
    
    /**
     * Sonido de un vehículo encendiendo.
     */
    private AudioClip audioCarroPrendiendo;
    
    /**
     * Se genera el sonido del auto prendiendo.
     */
    public void generarSonidoAutoPrendiendo() {
        audioCarroPrendiendo = java.applet.Applet.newAudioClip(getClass().getResource("/Audios/autoPrendiendo.wav"));
        audioCarroPrendiendo.play();
    }
    
    private AudioClip audioCarroAccidente;
    /**
     * Se genera el sonido del auto prendiendo.
     */
    public void generarSonidoAutoChoque() {
        audioCarroPrendiendo = java.applet.Applet.newAudioClip(getClass().getResource("/Audios/choque.wav"));
        audioCarroPrendiendo.play();
    }
    
     private AudioClip audioCarroFreno;
    /**
     * Se genera el sonido del auto prendiendo.
     */
    public void generarSonidoAutoFrenando() {
        audioCarroFreno = java.applet.Applet.newAudioClip(getClass().getResource("/Audios/autoFreno.wav"));
        audioCarroFreno.loop();
    }
    
    /**
     * Cuando el vehículo se accidenta, se activa esta función.
     */
    public void iniciarAccidente(){
        apagarVehiculo();
        generarSonidoAutoChoque();
        activarVidrio();
        activarReparacion();
        //desactivarAccionesVehiculo();
    }
    
    /**
     * Se muestran los vidrios en estado accidentado (rotos).
     */
    public void activarVidrio(){
        lblVidrio.setVisible(true);
        lblVidrioLateral.setVisible(true);
    }
    /**
     * Cuando se repara el vehículo, se quitan los vidrios rotos.
     */
    public void desactivarVidrios(){
        lblVidrio.setVisible(false);
        lblVidrioLateral.setVisible(false);
        btnReparar.setVisible(false);
    }
    /**
     * Se muestran los vidrios en estado original.
     */
    public void iniciarVidriosInvisibles(){
        btnReparar.setVisible(false);
        lblVidrio.setVisible(false);
        lblVidrioLateral.setVisible(false);
    }
    
    /**
     * Se define las acciones de los botones de la Vista Principal.
     * @param vistaMenuPrincipal vista en la cual se encuentran los estados.
     */
   public void decidirBotonesMenu(VistaMenuPrincipal vistaMenuPrincipal) {
        switch(vistaMenuPrincipal.getEstado()){
            case 1:
                simulador.leerTxt();
                this.setVisible(true);
            break;
            case 2:
                //crearDialogoTaller();
                VistaTaller vistaTaller = new VistaTaller(this, true);
                decidirBotonesTalleres(vistaTaller);
            break;
        }
    }
   
   /**
     * Se define las acciones de los botones de la Vista Principal.
     * @param vistaMenuPrincipal vista en la cual se encuentran los estados.
     */
   public void decidirBotonesTalleres(VistaTaller vistaTaller) {
        switch(vistaTaller.getEstadoTaller()){
            case 1:
                crearDialogoPrincipal();
            break;
            case 2:
                //crearDialogoTaller();
            break;
        }
    }
   
   /**
    * Cuando se sale del vehículo, se muestra la ventana principal.
    */
   public void crearDialogoPrincipal(){
       VistaMenuPrincipal vistaMenuPrincipal = new VistaMenuPrincipal(this, true);
       decidirBotonesMenu(vistaMenuPrincipal);
   }
   /**
    * En el momento que se activa ésta vista, se crea un nuevo vehículo
    * con los datos dados en el archivo de texto.
    */
   public void crearDialogoTaller(){
       VistaTaller vistaTaller = new VistaTaller(this, true);
   }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcelerar;
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnEncender;
    private javax.swing.JButton btnFreno;
    private javax.swing.JButton btnReparar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel fondo;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblVelocidad;
    private javax.swing.JLabel lblVidrio;
    private javax.swing.JLabel lblVidrioLateral;
    // End of variables declaration//GEN-END:variables
}
